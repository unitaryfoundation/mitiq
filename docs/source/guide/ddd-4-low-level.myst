---
jupytext:
  text_representation:
    extension: .myst
    format_name: myst
    format_version: 0.13
    jupytext_version: 1.11.1
kernelspec:
  display_name: Python 3
  language: python
  name: python3
---

# What happens when I use DDD?

The workflow of Digital Dynamical Decoupling (DDD) in Mitiq is represented in the figure below.

```{figure} ../img/ddd_workflow.png
---
width: 700px
name: ddd-workflow
---
Workflow of the DDD technique in Mitiq.
```

- The user provides a `QPROGRAM`, (i.e. a quantum circuit defined via any of the supported frontends).
- Mitiq modifies the input circuit with the insertion of DDD gate sequences in idle windows.
- The modified circuit is executed via a user-defined [Executor](executors.myst).
- The error mitigated expectation value is returned to the user.

With respect to the workflows of other error-mitigation techniques (e.g. [ZNE](zne-4-low-level.myst) or [PEC](pec-4-low-level.myst)), DDD involves the generation and the execution of a _single_ modified circuit.
For this reason, there is no need to combine the results of multiple circuits and the final inference step which is necessary for other 
techniques is instead trivial for DDD.

```{note}
When setting the `num_trials` option to a value larger than one, multiple circuit are actually generated by Mitiq and 
the associated results are averaged to obtain the final expectation value. This more general case is not shown in the figure since
it can be considered as the mere average of independent single-circuit workflows.
```

As demonstrated in [How do I use DDD?](ddd-1-intro.myst), the function {func}`.execute_with_ddd()` applies DDD behind the scenes 
and directly returns an error-mitigated expectation value.
In the next sections instead, we show how one can apply DDD at a lower level, i.e., by:

- Characterizing all the slack windows in a circuit,
- Inserting DDD sequences in all slack windows (if sufficiently large).
- Executing the modified circuit.

## Characterizing idle windows [Optional]

Characterizing the idle windows in a circuit is actually not necessary to
apply DDD with Mitiq. Nonetheless it provides additional information on the
gate structure of the circuit that can be quite useful, especially for research purposes. 

## Inserting DDD sequences


## Executing circuits with DDD
