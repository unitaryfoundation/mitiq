---
jupytext:
  text_representation:
    extension: .myst
    format_name: myst
    format_version: 0.13
    jupytext_version: 1.11.1
kernelspec:
  display_name: Python 3
  language: python
  name: python3
---

# Who thought of this? Why does it work? And whoâ€™s using it?

Probabilistic error cancellation (PEC) [[1-3]](#references) uses a quasi-probability 
representation [[4]](#references) to express an ideal (unitary) quantum channel as a
linear combination of noisy operations.
Given a set of noisy but implementable operations $\Omega = \{O_1, \dots, O_m\}$, an
ideal unitary gate can be expressed as

$$ \mathcal{G} = \sum_{\alpha} \eta_{\alpha} \mathcal{O}_\alpha 
= \gamma \sum_{\alpha} P(\alpha) \sigma(\alpha) \mathcal{O}_\alpha,$$

where $\eta_\alpha$ are real coefficients, $\gamma = \sum_{\alpha} |\eta_\alpha|$,
$P(\alpha)=|\eta_\alpha | /\gamma$ is a probability distribution,
and $\sigma(\alpha)={\rm sign}(\eta_\alpha)$.

The aim of PEC is estimating the ideal expectation value of some observable
of interest $\langle A\rangle_{\text{ideal}}$ after the action of an ideal circuit
$\{\mathcal{\mathcal G}_i\}_{i=1}^L$. 

This can be achieved probabilistically. We can sample a noisy operation
$\mathcal{O}_{\alpha}$ for each ideal gate $\mathcal{G}_i$
with probability $P_i(\alpha)$, obtaining a circuit of noisy operations
$\{\mathcal{O}_{\alpha_i}\}_{i=1}^L$ whose execution produces the
final mixed state $\rho_f$. 
Then, by measuring the observable  $A$, setting
$\gamma_{\text{tot}} := \prod_{i}^L \gamma_i$ and
$\sigma_{\text{tot}} = \prod_{i=1}^L \sigma_i(\alpha)$, we can obtain an unbiased
estimate of the ideal expectation value as follows:

$$\langle A\rangle_{\text{ideal}} = 
\mathbb E \left[ \gamma_{\text{tot}} \sigma_{\text{tot}} A_{\rm noisy} \right],$$

where $A_{\rm noisy}$ is the experimental estimate of ${\rm tr}[\rho_f A]$ 
and $\mathbb E$ is the sample average over many repetitions of the previous procedure.

The parameter $\gamma_{\rm tot}$ is the one-norm of the quasi-probability distribution and 
quantifies the sampling cost. Assuming a bounded observable $|A|\le 1$, the number of samples
necessary to approximate $\langle A\rangle_{\text{ideal}}$ within an absolute error $\delta$,
scales as [[5]](#references):

$$ {\rm number\ of\ samples\ } \propto \frac{\gamma_{\rm tot}^2}{\delta^2}. $$



## References
<a id='references'></a>

1. K. Temme, S. Bravyi, J. M. Gambetta, _Error Mitigation for Short-Depth Quantum Circuits_,
[arXiv:1612.02058](https://arxiv.org/abs/1612.02058).

2. S. Endo, S. C. Benjamin, Y. Li, _Practical Quantum Error Mitigation for Near-Future Applications_,
[arXiv:1712.09271](https://arxiv.org/abs/1712.09271).

3. S. Zhang, Y. Lu, K. Zhang, W. Chen, Y. Li, J.-N Zhang, K. Kim, _Error-Mitigated Quantum Gates Exceeding Physical Fidelities in a Trapped-Ion System_,
[arXiv:1905.10135](https://arxiv.org/abs/1905.10135).

4. H. Pashayan, J. J. Wallman, S. D. Bartlett, _Estimating outcome probabilities of quantum circuits using quasiprobabilities_,
[arXiv:1503.07525](https://arxiv.org/abs/1503.07525).

5. R. Takagi, _Optimal resource cost for error mitigation_,
[arXiv:2006.12509](https://arxiv.org/abs/2006.12509).
